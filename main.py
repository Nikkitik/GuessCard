import asyncio
from random import choice
from aiogram import Bot, Dispatcher, types, F
from aiogram.filters import CommandStart
from aiogram.types import BotCommand

from keys import TOKEN
from keyboards import reply

MENU_COMMANDS = [
    BotCommand(command='start', description='–ù–∞—á–∞—Ç—å –∏–≥—Ä—É!')
]

bot = Bot(token=TOKEN)
dp = Dispatcher()


@dp.message(CommandStart())
async def start(message: types.Message):
    await message.answer('–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π –º–æ–π –¥—Ä—É–≥!\n–í —ç—Ç–æ–π –∏–≥—Ä–µ —Ç–µ–±–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å —Ü–≤–µ—Ç –º–∞—Å—Ç–∏!',
                         reply_markup=reply.two_color_keyboard)


@dp.message((F.text == 'üü•') | (F.text == '‚¨õÔ∏è'))
async def compare_answers(message: types.Message):
    card, suit = generate_card()

    answer = message.text

    correct_answer_print = f'–í–µ—Ä–Ω–æ! –ë–æ—Ç –∑–∞–≥–∞–¥–∞–ª {card}{suit}'
    wrong_answer_print = f'–ù–µ–≤–µ—Ä–Ω–æ! –ë–æ—Ç –∑–∞–≥–∞–¥–∞–ª {card}{suit}'

    if answer == 'üü•' and suit in ['‚ô¶Ô∏è', '‚ô•Ô∏è']:
        await message.answer(correct_answer_print)
    elif answer == '‚¨õÔ∏è' and suit in ['‚ô£Ô∏è', '‚ô†Ô∏è']:
        await message.answer(correct_answer_print)
    else:
        await message.answer(wrong_answer_print)

    start(message)


def generate_card():
    cards = ['2', '3', '4', '5', '6', '7', '8', '9', '10', 'J', 'Q', 'K', 'T']
    suits = ['‚ô¶Ô∏è', '‚ô•Ô∏è', '‚ô£Ô∏è', '‚ô†Ô∏è']

    random_card = choice(cards)
    random_suit = choice(suits)

    return random_card, random_suit


async def main():
    await bot.delete_webhook(drop_pending_updates=True)
    # await bot.delete_my_commands(scope=types.BotCommandScopeAllPrivateChats())
    await bot.set_my_commands(commands=MENU_COMMANDS, scope=types.BotCommandScopeAllPrivateChats())
    await dp.start_polling(bot)

asyncio.run(main())
